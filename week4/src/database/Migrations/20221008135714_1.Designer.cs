// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pretpark.database;

#nullable disable

namespace database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20221008135714_1")]
    partial class _1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("pretpark.database.models.Attractie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("attracties");
                });

            modelBuilder.Entity("pretpark.database.models.DateTimeBereik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Begin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Eind")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("dateTimeBereik");
                });

            modelBuilder.Entity("pretpark.database.models.GastInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LaatstBezochteURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GastInfo");
                });

            modelBuilder.Entity("pretpark.database.models.Gebruiker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gebruikers", (string)null);
                });

            modelBuilder.Entity("pretpark.database.models.Onderhoud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Probleem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("aanAttractieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("aanAttractieId");

                    b.ToTable("ondehoud");
                });

            modelBuilder.Entity("pretpark.database.models.Gast", b =>
                {
                    b.HasBaseType("pretpark.database.models.Gebruiker");

                    b.Property<int?>("BegeleidtId")
                        .HasColumnType("int");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<DateTime>("EersteBezoek")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GeboorteDatum")
                        .HasColumnType("datetime2");

                    b.Property<int>("gastInfoId")
                        .HasColumnType("int");

                    b.HasIndex("BegeleidtId");

                    b.HasIndex("gastInfoId");

                    b.ToTable("Gasten", (string)null);
                });

            modelBuilder.Entity("pretpark.database.models.Medewerker", b =>
                {
                    b.HasBaseType("pretpark.database.models.Gebruiker");

                    b.ToTable("Medewerkers", (string)null);
                });

            modelBuilder.Entity("pretpark.database.models.Onderhoud", b =>
                {
                    b.HasOne("pretpark.database.models.Attractie", "aanAttractie")
                        .WithMany()
                        .HasForeignKey("aanAttractieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("aanAttractie");
                });

            modelBuilder.Entity("pretpark.database.models.Gast", b =>
                {
                    b.HasOne("pretpark.database.models.Gast", "Begeleidt")
                        .WithMany()
                        .HasForeignKey("BegeleidtId");

                    b.HasOne("pretpark.database.models.Gebruiker", null)
                        .WithOne()
                        .HasForeignKey("pretpark.database.models.Gast", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("pretpark.database.models.GastInfo", "gastInfo")
                        .WithMany()
                        .HasForeignKey("gastInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Begeleidt");

                    b.Navigation("gastInfo");
                });

            modelBuilder.Entity("pretpark.database.models.Medewerker", b =>
                {
                    b.HasOne("pretpark.database.models.Gebruiker", null)
                        .WithOne()
                        .HasForeignKey("pretpark.database.models.Medewerker", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
